document.addEventListener('DOMContentLoaded', function () {

  const addToCartFormSelector = "#add-to-cart-form";

  const productForm = {
    onProductOptionChanged: function (event) {
      const form = document.querySelector(addToCartFormSelector);
      const selectedVariant = productForm.getActiveVariant(form);
      const formChangeEvent = new CustomEvent('form:change', { detail: selectedVariant });
      form.dispatchEvent(formChangeEvent);
    },

    getActiveVariant: function (form) {
      const formEl = document.querySelector(addToCartFormSelector);
      const variants = JSON.parse(decodeURIComponent(formEl.dataset.variants));
      const formData = new FormData(formEl);

      const formOptions = {
        option1: formData.get('option1') || null,
        option2: formData.get('option2') || null,
        option3: formData.get('option3') || null,
      };

      let selectedVariant = null;

      variants.forEach((variant) => {
        if (
          variant.option1 === formOptions.option1 &&
          variant.option2 === formOptions.option2 &&
          variant.option3 === formOptions.option3
        ) {
          selectedVariant = variant;
          return false; // Exit loop early since variant is found
        }
      });

      return selectedVariant;
    },

    validate: function (event) {
      const form = this;
      const selectedVariant = productForm.getActiveVariant(form);
      const hasVariant = selectedVariant !== null;
      const canAddToCart = hasVariant && selectedVariant.inventory_quantity > 0;
      const id = document.querySelector(".js-variant-id");
      const quantity = document.querySelector(".js-quantity-total");
      const addToCartButton = document.querySelector("#add-to-cart-button");
      const maxQuantity = selectedVariant.inventory_quantity;
      if (canAddToCart) {
        id.value = selectedVariant.id;
        addToCartButton.disabled = false;
        quantity.dataset.max = maxQuantity;
      } else {
        id.value = 'null';
        addToCartButton.disabled = true;
      }
    },

    init: function () {
      document.addEventListener('change', productForm.onProductOptionChanged);
      document.addEventListener('change', productForm.validate);
    }
  };

  productForm.init();

  // Quantity control
  const plus = document.querySelector(".js-quantity-add");
  const minus = document.querySelector(".js-quantity-minus");
  const quantity = document.querySelector(".js-quantity-total");
  const quantityHidden = document.querySelector(".js-hidden-quantity");
  let currentCount = 1;

  const updateQuantity = () => {
    quantity.dataset.current = currentCount;
    quantity.innerHTML = currentCount;
    quantityHidden.value = currentCount;
  };

  const add = () => {
    const max = parseInt(quantity.dataset.max);
    if (currentCount < max) {
      currentCount += 1;
      updateQuantity();
    }
  };

  const reduce = () => {
    if (currentCount > 1) {
      currentCount -= 1;
      updateQuantity();
    }
  };

  if (plus) {
    plus.addEventListener("click", add);
  }

  if (minus) {
    minus.addEventListener("click", reduce);
  }

  // Ajax cart request end listener
  document.addEventListener('liquid-ajax-cart:request-end', event => {
    const { requestState } = event.detail;
    if (requestState.requestType === 'add' && requestState.responseData?.ok) {
      document.body.classList.add('js-show-ajax-cart');
    }
  });

  // Cart functionality
  const cart = document.querySelector('.my-cart');
  const cartBtns = document.querySelectorAll('.cart-btn');
  let cartState = false;

  const toggleCart = () => {
    cartState = !cartState;
    cart.classList.toggle('cart-open', cartState);
    document.body.classList.toggle('dim', cartState);
  };

  cartBtns.forEach((btn) => {
    btn.addEventListener('mousedown', toggleCart);
  });

  // Responsive height update
  let winHeight = window.innerHeight;
  document.documentElement.style.setProperty('--winHeight', `${winHeight}px`);

  window.addEventListener('resize', () => {
    winHeight = window.innerHeight;
    document.documentElement.style.setProperty('--winHeight', `${winHeight}px`);
  });
});
